# InfinityAI_bot/plugins/start.py

from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from config import OWNER_USERNAME

START_TEXT = """
ðŸ‘‹ Hello! I'm <b>Infinity AI</b> â€” your ultimate all-in-one assistant!  
I can help with:
â€¢ ðŸ’¬ AI Chatting  
â€¢ ðŸ›  Admin Tools  
â€¢ ðŸŽµ Music + Video  
â€¢ ðŸ“‚ Zip/Unzip Files  
â€¢ ðŸŽ® Games & Trivia  
â€¢ ðŸ“¥ Downloads  
â€¢ ðŸ’¡ Coding Help  
â€¢ ðŸ¤– OSINT & Info Tracing  
â€¢ ðŸŽ­ Meme/Sticker Creation  
â€¢ ðŸ—‚ Notes, Reminders & More!

Type <code>/help</code> to see all commands.
"""

HELP_TEXT = """
<b>ðŸ“š Infinity AI Commands:</b>

â€¢ <b>ðŸ’¬ AI:</b> Just message me or reply with text to start AI chat  
â€¢ <b>/zip, /unzip</b> - Compress or extract files  
â€¢ <b>/genpwd</b> - Generate secure password  
â€¢ <b>/play, /pause</b> - Music control  
â€¢ <b>/remind</b> - Set reminders  
â€¢ <b>/note, /get</b> - Save and get notes  
â€¢ <b>/osint, /userinfo</b> - User tracking tools  
â€¢ <b>/mode, /brain</b> - Switch AI brain/personality  
â€¢ <b>/ban, /kick</b> - Admin control  
â€¢ <b>/sticker</b> - Create stickers from photo/text  
â€¢ <b>/download</b> - Download from YouTube, IG, etc.  
â€¢ <b>/games</b> - Start word & brain games

More coming soon...

<b>ðŸ‘‘ Owner:</b> @{OWNER}
""".replace("{OWNER}", OWNER_USERNAME)

@Client.on_message(filters.command(["start", "alive"]))
async def start_cmd(_, message: Message):
    await message.reply_text(
        START_TEXT,
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("ðŸ“š Help", callback_data="show_help")],
            [InlineKeyboardButton("ðŸ‘¤ Owner", url=f"https://t.me/{OWNER_USERNAME}")]
        ])
    )

@Client.on_callback_query(filters.regex("show_help"))
async def show_help_callback(client, callback_query):
    await callback_query.message.edit_text(
        HELP_TEXT,
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("ðŸ”™ Back", callback_data="back_start")]
        ])
    )

@Client.on_callback_query(filters.regex("back_start"))
async def back_start_callback(client, callback_query):
    await callback_query.message.edit_text(
        START_TEXT,
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("ðŸ“š Help", callback_data="show_help")],
            [InlineKeyboardButton("ðŸ‘¤ Owner", url=f"https://t.me/{OWNER_USERNAME}")]
        ])
                                 )
